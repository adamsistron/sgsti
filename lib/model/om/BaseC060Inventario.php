<?php

/**
 * Base class that represents a row from the 'c060_inventario' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Sat Nov 14 07:33:32 2015
 *
 * @package    lib.model.om
 */
abstract class BaseC060Inventario extends BaseObject  implements Persistent {


  const PEER = 'C060InventarioPeer';

	/**
	 * The Peer class.
	 * Instance provides a convenient way of calling static methods on a class
	 * that calling code may not be able to identify.
	 * @var        C060InventarioPeer
	 */
	protected static $peer;

	/**
	 * The value for the co_equipo field.
	 * @var        string
	 */
	protected $co_equipo;

	/**
	 * The value for the co_region field.
	 * @var        string
	 */
	protected $co_region;

	/**
	 * The value for the co_negocio field.
	 * @var        string
	 */
	protected $co_negocio;

	/**
	 * The value for the co_division field.
	 * @var        string
	 */
	protected $co_division;

	/**
	 * The value for the co_tipo field.
	 * @var        string
	 */
	protected $co_tipo;

	/**
	 * The value for the co_custodio field.
	 * @var        string
	 */
	protected $co_custodio;

	/**
	 * The value for the tx_etiqueta_sti field.
	 * @var        string
	 */
	protected $tx_etiqueta_sti;

	/**
	 * The value for the co_estado field.
	 * @var        string
	 */
	protected $co_estado;

	/**
	 * The value for the tx_nombre_equipo field.
	 * @var        string
	 */
	protected $tx_nombre_equipo;

	/**
	 * The value for the tx_funsion_equipo field.
	 * @var        string
	 */
	protected $tx_funsion_equipo;

	/**
	 * The value for the co_so field.
	 * @var        string
	 */
	protected $co_so;

	/**
	 * The value for the tx_etiqueta_activo field.
	 * @var        string
	 */
	protected $tx_etiqueta_activo;

	/**
	 * The value for the tx_serial_hardware field.
	 * @var        string
	 */
	protected $tx_serial_hardware;

	/**
	 * The value for the tx_marca_hardware field.
	 * @var        string
	 */
	protected $tx_marca_hardware;

	/**
	 * The value for the tx_modelo_hardware field.
	 * @var        string
	 */
	protected $tx_modelo_hardware;

	/**
	 * The value for the co_ciudad field.
	 * @var        string
	 */
	protected $co_ciudad;

	/**
	 * The value for the co_edificio field.
	 * @var        string
	 */
	protected $co_edificio;

	/**
	 * The value for the tx_direccion_ubicacion field.
	 * @var        string
	 */
	protected $tx_direccion_ubicacion;

	/**
	 * The value for the tx_detalle_ubicacion field.
	 * @var        string
	 */
	protected $tx_detalle_ubicacion;

	/**
	 * The value for the co_centro_dato field.
	 * @var        string
	 */
	protected $co_centro_dato;

	/**
	 * The value for the co_rack field.
	 * @var        string
	 */
	protected $co_rack;

	/**
	 * The value for the tx_ubicacion_llave field.
	 * @var        string
	 */
	protected $tx_ubicacion_llave;

	/**
	 * The value for the in_respaldo_automatizado field.
	 * @var        boolean
	 */
	protected $in_respaldo_automatizado;

	/**
	 * The value for the in_bloqueo_inactividad field.
	 * @var        boolean
	 */
	protected $in_bloqueo_inactividad;

	/**
	 * The value for the in_adiministradores_personalizados field.
	 * @var        boolean
	 */
	protected $in_adiministradores_personalizados;

	/**
	 * The value for the in_politica_password field.
	 * @var        boolean
	 */
	protected $in_politica_password;

	/**
	 * The value for the in_sincronizacion_reloj field.
	 * @var        boolean
	 */
	protected $in_sincronizacion_reloj;

	/**
	 * The value for the in_monitoreado field.
	 * @var        boolean
	 */
	protected $in_monitoreado;

	/**
	 * The value for the in_inf_actualizada field.
	 * @var        boolean
	 */
	protected $in_inf_actualizada;

	/**
	 * The value for the in_log_activo field.
	 * @var        boolean
	 */
	protected $in_log_activo;

	/**
	 * The value for the co_nivel_criticidad field.
	 * @var        string
	 */
	protected $co_nivel_criticidad;

	/**
	 * The value for the tx_observaciones field.
	 * @var        string
	 */
	protected $tx_observaciones;

	/**
	 * The value for the tx_ruta_respaldo_configuraciones field.
	 * @var        string
	 */
	protected $tx_ruta_respaldo_configuraciones;

	/**
	 * The value for the co_num_inventario field.
	 * @var        string
	 */
	protected $co_num_inventario;

	/**
	 * Flag to prevent endless save loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInSave = false;

	/**
	 * Flag to prevent endless validation loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInValidation = false;

	/**
	 * Initializes internal state of BaseC060Inventario object.
	 * @see        applyDefaults()
	 */
	public function __construct()
	{
		parent::__construct();
		$this->applyDefaultValues();
	}

	/**
	 * Applies default values to this object.
	 * This method should be called from the object's constructor (or
	 * equivalent initialization method).
	 * @see        __construct()
	 */
	public function applyDefaultValues()
	{
	}

	/**
	 * Get the [co_equipo] column value.
	 * 
	 * @return     string
	 */
	public function getCoEquipo()
	{
		return $this->co_equipo;
	}

	/**
	 * Get the [co_region] column value.
	 * 
	 * @return     string
	 */
	public function getCoRegion()
	{
		return $this->co_region;
	}

	/**
	 * Get the [co_negocio] column value.
	 * 
	 * @return     string
	 */
	public function getCoNegocio()
	{
		return $this->co_negocio;
	}

	/**
	 * Get the [co_division] column value.
	 * 
	 * @return     string
	 */
	public function getCoDivision()
	{
		return $this->co_division;
	}

	/**
	 * Get the [co_tipo] column value.
	 * 
	 * @return     string
	 */
	public function getCoTipo()
	{
		return $this->co_tipo;
	}

	/**
	 * Get the [co_custodio] column value.
	 * 
	 * @return     string
	 */
	public function getCoCustodio()
	{
		return $this->co_custodio;
	}

	/**
	 * Get the [tx_etiqueta_sti] column value.
	 * 
	 * @return     string
	 */
	public function getTxEtiquetaSti()
	{
		return $this->tx_etiqueta_sti;
	}

	/**
	 * Get the [co_estado] column value.
	 * 
	 * @return     string
	 */
	public function getCoEstado()
	{
		return $this->co_estado;
	}

	/**
	 * Get the [tx_nombre_equipo] column value.
	 * 
	 * @return     string
	 */
	public function getTxNombreEquipo()
	{
		return $this->tx_nombre_equipo;
	}

	/**
	 * Get the [tx_funsion_equipo] column value.
	 * 
	 * @return     string
	 */
	public function getTxFunsionEquipo()
	{
		return $this->tx_funsion_equipo;
	}

	/**
	 * Get the [co_so] column value.
	 * 
	 * @return     string
	 */
	public function getCoSo()
	{
		return $this->co_so;
	}

	/**
	 * Get the [tx_etiqueta_activo] column value.
	 * 
	 * @return     string
	 */
	public function getTxEtiquetaActivo()
	{
		return $this->tx_etiqueta_activo;
	}

	/**
	 * Get the [tx_serial_hardware] column value.
	 * 
	 * @return     string
	 */
	public function getTxSerialHardware()
	{
		return $this->tx_serial_hardware;
	}

	/**
	 * Get the [tx_marca_hardware] column value.
	 * 
	 * @return     string
	 */
	public function getTxMarcaHardware()
	{
		return $this->tx_marca_hardware;
	}

	/**
	 * Get the [tx_modelo_hardware] column value.
	 * 
	 * @return     string
	 */
	public function getTxModeloHardware()
	{
		return $this->tx_modelo_hardware;
	}

	/**
	 * Get the [co_ciudad] column value.
	 * 
	 * @return     string
	 */
	public function getCoCiudad()
	{
		return $this->co_ciudad;
	}

	/**
	 * Get the [co_edificio] column value.
	 * 
	 * @return     string
	 */
	public function getCoEdificio()
	{
		return $this->co_edificio;
	}

	/**
	 * Get the [tx_direccion_ubicacion] column value.
	 * 
	 * @return     string
	 */
	public function getTxDireccionUbicacion()
	{
		return $this->tx_direccion_ubicacion;
	}

	/**
	 * Get the [tx_detalle_ubicacion] column value.
	 * 
	 * @return     string
	 */
	public function getTxDetalleUbicacion()
	{
		return $this->tx_detalle_ubicacion;
	}

	/**
	 * Get the [co_centro_dato] column value.
	 * 
	 * @return     string
	 */
	public function getCoCentroDato()
	{
		return $this->co_centro_dato;
	}

	/**
	 * Get the [co_rack] column value.
	 * 
	 * @return     string
	 */
	public function getCoRack()
	{
		return $this->co_rack;
	}

	/**
	 * Get the [tx_ubicacion_llave] column value.
	 * 
	 * @return     string
	 */
	public function getTxUbicacionLlave()
	{
		return $this->tx_ubicacion_llave;
	}

	/**
	 * Get the [in_respaldo_automatizado] column value.
	 * 
	 * @return     boolean
	 */
	public function getInRespaldoAutomatizado()
	{
		return $this->in_respaldo_automatizado;
	}

	/**
	 * Get the [in_bloqueo_inactividad] column value.
	 * 
	 * @return     boolean
	 */
	public function getInBloqueoInactividad()
	{
		return $this->in_bloqueo_inactividad;
	}

	/**
	 * Get the [in_adiministradores_personalizados] column value.
	 * 
	 * @return     boolean
	 */
	public function getInAdiministradoresPersonalizados()
	{
		return $this->in_adiministradores_personalizados;
	}

	/**
	 * Get the [in_politica_password] column value.
	 * 
	 * @return     boolean
	 */
	public function getInPoliticaPassword()
	{
		return $this->in_politica_password;
	}

	/**
	 * Get the [in_sincronizacion_reloj] column value.
	 * 
	 * @return     boolean
	 */
	public function getInSincronizacionReloj()
	{
		return $this->in_sincronizacion_reloj;
	}

	/**
	 * Get the [in_monitoreado] column value.
	 * 
	 * @return     boolean
	 */
	public function getInMonitoreado()
	{
		return $this->in_monitoreado;
	}

	/**
	 * Get the [in_inf_actualizada] column value.
	 * 
	 * @return     boolean
	 */
	public function getInInfActualizada()
	{
		return $this->in_inf_actualizada;
	}

	/**
	 * Get the [in_log_activo] column value.
	 * 
	 * @return     boolean
	 */
	public function getInLogActivo()
	{
		return $this->in_log_activo;
	}

	/**
	 * Get the [co_nivel_criticidad] column value.
	 * 
	 * @return     string
	 */
	public function getCoNivelCriticidad()
	{
		return $this->co_nivel_criticidad;
	}

	/**
	 * Get the [tx_observaciones] column value.
	 * 
	 * @return     string
	 */
	public function getTxObservaciones()
	{
		return $this->tx_observaciones;
	}

	/**
	 * Get the [tx_ruta_respaldo_configuraciones] column value.
	 * 
	 * @return     string
	 */
	public function getTxRutaRespaldoConfiguraciones()
	{
		return $this->tx_ruta_respaldo_configuraciones;
	}

	/**
	 * Get the [co_num_inventario] column value.
	 * 
	 * @return     string
	 */
	public function getCoNumInventario()
	{
		return $this->co_num_inventario;
	}

	/**
	 * Set the value of [co_equipo] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setCoEquipo($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->co_equipo !== $v) {
			$this->co_equipo = $v;
			$this->modifiedColumns[] = C060InventarioPeer::CO_EQUIPO;
		}

		return $this;
	} // setCoEquipo()

	/**
	 * Set the value of [co_region] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setCoRegion($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->co_region !== $v) {
			$this->co_region = $v;
			$this->modifiedColumns[] = C060InventarioPeer::CO_REGION;
		}

		return $this;
	} // setCoRegion()

	/**
	 * Set the value of [co_negocio] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setCoNegocio($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->co_negocio !== $v) {
			$this->co_negocio = $v;
			$this->modifiedColumns[] = C060InventarioPeer::CO_NEGOCIO;
		}

		return $this;
	} // setCoNegocio()

	/**
	 * Set the value of [co_division] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setCoDivision($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->co_division !== $v) {
			$this->co_division = $v;
			$this->modifiedColumns[] = C060InventarioPeer::CO_DIVISION;
		}

		return $this;
	} // setCoDivision()

	/**
	 * Set the value of [co_tipo] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setCoTipo($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->co_tipo !== $v) {
			$this->co_tipo = $v;
			$this->modifiedColumns[] = C060InventarioPeer::CO_TIPO;
		}

		return $this;
	} // setCoTipo()

	/**
	 * Set the value of [co_custodio] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setCoCustodio($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->co_custodio !== $v) {
			$this->co_custodio = $v;
			$this->modifiedColumns[] = C060InventarioPeer::CO_CUSTODIO;
		}

		return $this;
	} // setCoCustodio()

	/**
	 * Set the value of [tx_etiqueta_sti] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setTxEtiquetaSti($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->tx_etiqueta_sti !== $v) {
			$this->tx_etiqueta_sti = $v;
			$this->modifiedColumns[] = C060InventarioPeer::TX_ETIQUETA_STI;
		}

		return $this;
	} // setTxEtiquetaSti()

	/**
	 * Set the value of [co_estado] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setCoEstado($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->co_estado !== $v) {
			$this->co_estado = $v;
			$this->modifiedColumns[] = C060InventarioPeer::CO_ESTADO;
		}

		return $this;
	} // setCoEstado()

	/**
	 * Set the value of [tx_nombre_equipo] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setTxNombreEquipo($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->tx_nombre_equipo !== $v) {
			$this->tx_nombre_equipo = $v;
			$this->modifiedColumns[] = C060InventarioPeer::TX_NOMBRE_EQUIPO;
		}

		return $this;
	} // setTxNombreEquipo()

	/**
	 * Set the value of [tx_funsion_equipo] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setTxFunsionEquipo($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->tx_funsion_equipo !== $v) {
			$this->tx_funsion_equipo = $v;
			$this->modifiedColumns[] = C060InventarioPeer::TX_FUNSION_EQUIPO;
		}

		return $this;
	} // setTxFunsionEquipo()

	/**
	 * Set the value of [co_so] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setCoSo($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->co_so !== $v) {
			$this->co_so = $v;
			$this->modifiedColumns[] = C060InventarioPeer::CO_SO;
		}

		return $this;
	} // setCoSo()

	/**
	 * Set the value of [tx_etiqueta_activo] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setTxEtiquetaActivo($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->tx_etiqueta_activo !== $v) {
			$this->tx_etiqueta_activo = $v;
			$this->modifiedColumns[] = C060InventarioPeer::TX_ETIQUETA_ACTIVO;
		}

		return $this;
	} // setTxEtiquetaActivo()

	/**
	 * Set the value of [tx_serial_hardware] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setTxSerialHardware($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->tx_serial_hardware !== $v) {
			$this->tx_serial_hardware = $v;
			$this->modifiedColumns[] = C060InventarioPeer::TX_SERIAL_HARDWARE;
		}

		return $this;
	} // setTxSerialHardware()

	/**
	 * Set the value of [tx_marca_hardware] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setTxMarcaHardware($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->tx_marca_hardware !== $v) {
			$this->tx_marca_hardware = $v;
			$this->modifiedColumns[] = C060InventarioPeer::TX_MARCA_HARDWARE;
		}

		return $this;
	} // setTxMarcaHardware()

	/**
	 * Set the value of [tx_modelo_hardware] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setTxModeloHardware($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->tx_modelo_hardware !== $v) {
			$this->tx_modelo_hardware = $v;
			$this->modifiedColumns[] = C060InventarioPeer::TX_MODELO_HARDWARE;
		}

		return $this;
	} // setTxModeloHardware()

	/**
	 * Set the value of [co_ciudad] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setCoCiudad($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->co_ciudad !== $v) {
			$this->co_ciudad = $v;
			$this->modifiedColumns[] = C060InventarioPeer::CO_CIUDAD;
		}

		return $this;
	} // setCoCiudad()

	/**
	 * Set the value of [co_edificio] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setCoEdificio($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->co_edificio !== $v) {
			$this->co_edificio = $v;
			$this->modifiedColumns[] = C060InventarioPeer::CO_EDIFICIO;
		}

		return $this;
	} // setCoEdificio()

	/**
	 * Set the value of [tx_direccion_ubicacion] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setTxDireccionUbicacion($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->tx_direccion_ubicacion !== $v) {
			$this->tx_direccion_ubicacion = $v;
			$this->modifiedColumns[] = C060InventarioPeer::TX_DIRECCION_UBICACION;
		}

		return $this;
	} // setTxDireccionUbicacion()

	/**
	 * Set the value of [tx_detalle_ubicacion] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setTxDetalleUbicacion($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->tx_detalle_ubicacion !== $v) {
			$this->tx_detalle_ubicacion = $v;
			$this->modifiedColumns[] = C060InventarioPeer::TX_DETALLE_UBICACION;
		}

		return $this;
	} // setTxDetalleUbicacion()

	/**
	 * Set the value of [co_centro_dato] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setCoCentroDato($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->co_centro_dato !== $v) {
			$this->co_centro_dato = $v;
			$this->modifiedColumns[] = C060InventarioPeer::CO_CENTRO_DATO;
		}

		return $this;
	} // setCoCentroDato()

	/**
	 * Set the value of [co_rack] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setCoRack($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->co_rack !== $v) {
			$this->co_rack = $v;
			$this->modifiedColumns[] = C060InventarioPeer::CO_RACK;
		}

		return $this;
	} // setCoRack()

	/**
	 * Set the value of [tx_ubicacion_llave] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setTxUbicacionLlave($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->tx_ubicacion_llave !== $v) {
			$this->tx_ubicacion_llave = $v;
			$this->modifiedColumns[] = C060InventarioPeer::TX_UBICACION_LLAVE;
		}

		return $this;
	} // setTxUbicacionLlave()

	/**
	 * Set the value of [in_respaldo_automatizado] column.
	 * 
	 * @param      boolean $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setInRespaldoAutomatizado($v)
	{
		if ($v !== null) {
			$v = (boolean) $v;
		}

		if ($this->in_respaldo_automatizado !== $v) {
			$this->in_respaldo_automatizado = $v;
			$this->modifiedColumns[] = C060InventarioPeer::IN_RESPALDO_AUTOMATIZADO;
		}

		return $this;
	} // setInRespaldoAutomatizado()

	/**
	 * Set the value of [in_bloqueo_inactividad] column.
	 * 
	 * @param      boolean $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setInBloqueoInactividad($v)
	{
		if ($v !== null) {
			$v = (boolean) $v;
		}

		if ($this->in_bloqueo_inactividad !== $v) {
			$this->in_bloqueo_inactividad = $v;
			$this->modifiedColumns[] = C060InventarioPeer::IN_BLOQUEO_INACTIVIDAD;
		}

		return $this;
	} // setInBloqueoInactividad()

	/**
	 * Set the value of [in_adiministradores_personalizados] column.
	 * 
	 * @param      boolean $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setInAdiministradoresPersonalizados($v)
	{
		if ($v !== null) {
			$v = (boolean) $v;
		}

		if ($this->in_adiministradores_personalizados !== $v) {
			$this->in_adiministradores_personalizados = $v;
			$this->modifiedColumns[] = C060InventarioPeer::IN_ADIMINISTRADORES_PERSONALIZADOS;
		}

		return $this;
	} // setInAdiministradoresPersonalizados()

	/**
	 * Set the value of [in_politica_password] column.
	 * 
	 * @param      boolean $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setInPoliticaPassword($v)
	{
		if ($v !== null) {
			$v = (boolean) $v;
		}

		if ($this->in_politica_password !== $v) {
			$this->in_politica_password = $v;
			$this->modifiedColumns[] = C060InventarioPeer::IN_POLITICA_PASSWORD;
		}

		return $this;
	} // setInPoliticaPassword()

	/**
	 * Set the value of [in_sincronizacion_reloj] column.
	 * 
	 * @param      boolean $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setInSincronizacionReloj($v)
	{
		if ($v !== null) {
			$v = (boolean) $v;
		}

		if ($this->in_sincronizacion_reloj !== $v) {
			$this->in_sincronizacion_reloj = $v;
			$this->modifiedColumns[] = C060InventarioPeer::IN_SINCRONIZACION_RELOJ;
		}

		return $this;
	} // setInSincronizacionReloj()

	/**
	 * Set the value of [in_monitoreado] column.
	 * 
	 * @param      boolean $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setInMonitoreado($v)
	{
		if ($v !== null) {
			$v = (boolean) $v;
		}

		if ($this->in_monitoreado !== $v) {
			$this->in_monitoreado = $v;
			$this->modifiedColumns[] = C060InventarioPeer::IN_MONITOREADO;
		}

		return $this;
	} // setInMonitoreado()

	/**
	 * Set the value of [in_inf_actualizada] column.
	 * 
	 * @param      boolean $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setInInfActualizada($v)
	{
		if ($v !== null) {
			$v = (boolean) $v;
		}

		if ($this->in_inf_actualizada !== $v) {
			$this->in_inf_actualizada = $v;
			$this->modifiedColumns[] = C060InventarioPeer::IN_INF_ACTUALIZADA;
		}

		return $this;
	} // setInInfActualizada()

	/**
	 * Set the value of [in_log_activo] column.
	 * 
	 * @param      boolean $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setInLogActivo($v)
	{
		if ($v !== null) {
			$v = (boolean) $v;
		}

		if ($this->in_log_activo !== $v) {
			$this->in_log_activo = $v;
			$this->modifiedColumns[] = C060InventarioPeer::IN_LOG_ACTIVO;
		}

		return $this;
	} // setInLogActivo()

	/**
	 * Set the value of [co_nivel_criticidad] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setCoNivelCriticidad($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->co_nivel_criticidad !== $v) {
			$this->co_nivel_criticidad = $v;
			$this->modifiedColumns[] = C060InventarioPeer::CO_NIVEL_CRITICIDAD;
		}

		return $this;
	} // setCoNivelCriticidad()

	/**
	 * Set the value of [tx_observaciones] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setTxObservaciones($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->tx_observaciones !== $v) {
			$this->tx_observaciones = $v;
			$this->modifiedColumns[] = C060InventarioPeer::TX_OBSERVACIONES;
		}

		return $this;
	} // setTxObservaciones()

	/**
	 * Set the value of [tx_ruta_respaldo_configuraciones] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setTxRutaRespaldoConfiguraciones($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->tx_ruta_respaldo_configuraciones !== $v) {
			$this->tx_ruta_respaldo_configuraciones = $v;
			$this->modifiedColumns[] = C060InventarioPeer::TX_RUTA_RESPALDO_CONFIGURACIONES;
		}

		return $this;
	} // setTxRutaRespaldoConfiguraciones()

	/**
	 * Set the value of [co_num_inventario] column.
	 * 
	 * @param      string $v new value
	 * @return     C060Inventario The current object (for fluent API support)
	 */
	public function setCoNumInventario($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->co_num_inventario !== $v) {
			$this->co_num_inventario = $v;
			$this->modifiedColumns[] = C060InventarioPeer::CO_NUM_INVENTARIO;
		}

		return $this;
	} // setCoNumInventario()

	/**
	 * Indicates whether the columns in this object are only set to default values.
	 *
	 * This method can be used in conjunction with isModified() to indicate whether an object is both
	 * modified _and_ has some values set which are non-default.
	 *
	 * @return     boolean Whether the columns in this object are only been set with default values.
	 */
	public function hasOnlyDefaultValues()
	{
			// First, ensure that we don't have any columns that have been modified which aren't default columns.
			if (array_diff($this->modifiedColumns, array())) {
				return false;
			}

		// otherwise, everything was equal, so return TRUE
		return true;
	} // hasOnlyDefaultValues()

	/**
	 * Hydrates (populates) the object variables with values from the database resultset.
	 *
	 * An offset (0-based "start column") is specified so that objects can be hydrated
	 * with a subset of the columns in the resultset rows.  This is needed, for example,
	 * for results of JOIN queries where the resultset row includes columns from two or
	 * more tables.
	 *
	 * @param      array $row The row returned by PDOStatement->fetch(PDO::FETCH_NUM)
	 * @param      int $startcol 0-based offset column which indicates which restultset column to start with.
	 * @param      boolean $rehydrate Whether this object is being re-hydrated from the database.
	 * @return     int next starting column
	 * @throws     PropelException  - Any caught Exception will be rewrapped as a PropelException.
	 */
	public function hydrate($row, $startcol = 0, $rehydrate = false)
	{
		try {

			$this->co_equipo = ($row[$startcol + 0] !== null) ? (string) $row[$startcol + 0] : null;
			$this->co_region = ($row[$startcol + 1] !== null) ? (string) $row[$startcol + 1] : null;
			$this->co_negocio = ($row[$startcol + 2] !== null) ? (string) $row[$startcol + 2] : null;
			$this->co_division = ($row[$startcol + 3] !== null) ? (string) $row[$startcol + 3] : null;
			$this->co_tipo = ($row[$startcol + 4] !== null) ? (string) $row[$startcol + 4] : null;
			$this->co_custodio = ($row[$startcol + 5] !== null) ? (string) $row[$startcol + 5] : null;
			$this->tx_etiqueta_sti = ($row[$startcol + 6] !== null) ? (string) $row[$startcol + 6] : null;
			$this->co_estado = ($row[$startcol + 7] !== null) ? (string) $row[$startcol + 7] : null;
			$this->tx_nombre_equipo = ($row[$startcol + 8] !== null) ? (string) $row[$startcol + 8] : null;
			$this->tx_funsion_equipo = ($row[$startcol + 9] !== null) ? (string) $row[$startcol + 9] : null;
			$this->co_so = ($row[$startcol + 10] !== null) ? (string) $row[$startcol + 10] : null;
			$this->tx_etiqueta_activo = ($row[$startcol + 11] !== null) ? (string) $row[$startcol + 11] : null;
			$this->tx_serial_hardware = ($row[$startcol + 12] !== null) ? (string) $row[$startcol + 12] : null;
			$this->tx_marca_hardware = ($row[$startcol + 13] !== null) ? (string) $row[$startcol + 13] : null;
			$this->tx_modelo_hardware = ($row[$startcol + 14] !== null) ? (string) $row[$startcol + 14] : null;
			$this->co_ciudad = ($row[$startcol + 15] !== null) ? (string) $row[$startcol + 15] : null;
			$this->co_edificio = ($row[$startcol + 16] !== null) ? (string) $row[$startcol + 16] : null;
			$this->tx_direccion_ubicacion = ($row[$startcol + 17] !== null) ? (string) $row[$startcol + 17] : null;
			$this->tx_detalle_ubicacion = ($row[$startcol + 18] !== null) ? (string) $row[$startcol + 18] : null;
			$this->co_centro_dato = ($row[$startcol + 19] !== null) ? (string) $row[$startcol + 19] : null;
			$this->co_rack = ($row[$startcol + 20] !== null) ? (string) $row[$startcol + 20] : null;
			$this->tx_ubicacion_llave = ($row[$startcol + 21] !== null) ? (string) $row[$startcol + 21] : null;
			$this->in_respaldo_automatizado = ($row[$startcol + 22] !== null) ? (boolean) $row[$startcol + 22] : null;
			$this->in_bloqueo_inactividad = ($row[$startcol + 23] !== null) ? (boolean) $row[$startcol + 23] : null;
			$this->in_adiministradores_personalizados = ($row[$startcol + 24] !== null) ? (boolean) $row[$startcol + 24] : null;
			$this->in_politica_password = ($row[$startcol + 25] !== null) ? (boolean) $row[$startcol + 25] : null;
			$this->in_sincronizacion_reloj = ($row[$startcol + 26] !== null) ? (boolean) $row[$startcol + 26] : null;
			$this->in_monitoreado = ($row[$startcol + 27] !== null) ? (boolean) $row[$startcol + 27] : null;
			$this->in_inf_actualizada = ($row[$startcol + 28] !== null) ? (boolean) $row[$startcol + 28] : null;
			$this->in_log_activo = ($row[$startcol + 29] !== null) ? (boolean) $row[$startcol + 29] : null;
			$this->co_nivel_criticidad = ($row[$startcol + 30] !== null) ? (string) $row[$startcol + 30] : null;
			$this->tx_observaciones = ($row[$startcol + 31] !== null) ? (string) $row[$startcol + 31] : null;
			$this->tx_ruta_respaldo_configuraciones = ($row[$startcol + 32] !== null) ? (string) $row[$startcol + 32] : null;
			$this->co_num_inventario = ($row[$startcol + 33] !== null) ? (string) $row[$startcol + 33] : null;
			$this->resetModified();

			$this->setNew(false);

			if ($rehydrate) {
				$this->ensureConsistency();
			}

			// FIXME - using NUM_COLUMNS may be clearer.
			return $startcol + 34; // 34 = C060InventarioPeer::NUM_COLUMNS - C060InventarioPeer::NUM_LAZY_LOAD_COLUMNS).

		} catch (Exception $e) {
			throw new PropelException("Error populating C060Inventario object", $e);
		}
	}

	/**
	 * Checks and repairs the internal consistency of the object.
	 *
	 * This method is executed after an already-instantiated object is re-hydrated
	 * from the database.  It exists to check any foreign keys to make sure that
	 * the objects related to the current object are correct based on foreign key.
	 *
	 * You can override this method in the stub class, but you should always invoke
	 * the base method from the overridden method (i.e. parent::ensureConsistency()),
	 * in case your model changes.
	 *
	 * @throws     PropelException
	 */
	public function ensureConsistency()
	{

	} // ensureConsistency

	/**
	 * Reloads this object from datastore based on primary key and (optionally) resets all associated objects.
	 *
	 * This will only work if the object has been saved and has a valid primary key set.
	 *
	 * @param      boolean $deep (optional) Whether to also de-associated any related objects.
	 * @param      PropelPDO $con (optional) The PropelPDO connection to use.
	 * @return     void
	 * @throws     PropelException - if this object is deleted, unsaved or doesn't have pk match in db
	 */
	public function reload($deep = false, PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("Cannot reload a deleted object.");
		}

		if ($this->isNew()) {
			throw new PropelException("Cannot reload an unsaved object.");
		}

		if ($con === null) {
			$con = Propel::getConnection(C060InventarioPeer::DATABASE_NAME, Propel::CONNECTION_READ);
		}

		// We don't need to alter the object instance pool; we're just modifying this instance
		// already in the pool.

		$stmt = C060InventarioPeer::doSelectStmt($this->buildPkeyCriteria(), $con);
		$row = $stmt->fetch(PDO::FETCH_NUM);
		$stmt->closeCursor();
		if (!$row) {
			throw new PropelException('Cannot find matching row in the database to reload object values.');
		}
		$this->hydrate($row, 0, true); // rehydrate

		if ($deep) {  // also de-associate any related objects?

		} // if (deep)
	}

	/**
	 * Removes this object from datastore and sets delete attribute.
	 *
	 * @param      PropelPDO $con
	 * @return     void
	 * @throws     PropelException
	 * @see        BaseObject::setDeleted()
	 * @see        BaseObject::isDeleted()
	 */
	public function delete(PropelPDO $con = null)
	{

    foreach (sfMixer::getCallables('BaseC060Inventario:delete:pre') as $callable)
    {
      $ret = call_user_func($callable, $this, $con);
      if ($ret)
      {
        return;
      }
    }


		if ($this->isDeleted()) {
			throw new PropelException("This object has already been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(C060InventarioPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}
		
		$con->beginTransaction();
		try {
			C060InventarioPeer::doDelete($this, $con);
			$this->setDeleted(true);
			$con->commit();
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	

    foreach (sfMixer::getCallables('BaseC060Inventario:delete:post') as $callable)
    {
      call_user_func($callable, $this, $con);
    }

  }
	/**
	 * Persists this object to the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All modified related objects will also be persisted in the doSave()
	 * method.  This method wraps all precipitate database operations in a
	 * single transaction.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        doSave()
	 */
	public function save(PropelPDO $con = null)
	{

    foreach (sfMixer::getCallables('BaseC060Inventario:save:pre') as $callable)
    {
      $affectedRows = call_user_func($callable, $this, $con);
      if (is_int($affectedRows))
      {
        return $affectedRows;
      }
    }


		if ($this->isDeleted()) {
			throw new PropelException("You cannot save an object that has been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(C060InventarioPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}
		
		$con->beginTransaction();
		try {
			$affectedRows = $this->doSave($con);
			$con->commit();
    foreach (sfMixer::getCallables('BaseC060Inventario:save:post') as $callable)
    {
      call_user_func($callable, $this, $con, $affectedRows);
    }

			C060InventarioPeer::addInstanceToPool($this);
			return $affectedRows;
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	}

	/**
	 * Performs the work of inserting or updating the row in the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All related objects are also updated in this method.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        save()
	 */
	protected function doSave(PropelPDO $con)
	{
		$affectedRows = 0; // initialize var to track total num of affected rows
		if (!$this->alreadyInSave) {
			$this->alreadyInSave = true;

			if ($this->isNew() ) {
				$this->modifiedColumns[] = C060InventarioPeer::CO_NUM_INVENTARIO;
			}

			// If this object has been modified, then save it to the database.
			if ($this->isModified()) {
				if ($this->isNew()) {
					$pk = C060InventarioPeer::doInsert($this, $con);
					$affectedRows += 1; // we are assuming that there is only 1 row per doInsert() which
										 // should always be true here (even though technically
										 // BasePeer::doInsert() can insert multiple rows).

					$this->setCoNumInventario($pk);  //[IMV] update autoincrement primary key

					$this->setNew(false);
				} else {
					$affectedRows += C060InventarioPeer::doUpdate($this, $con);
				}

				$this->resetModified(); // [HL] After being saved an object is no longer 'modified'
			}

			$this->alreadyInSave = false;

		}
		return $affectedRows;
	} // doSave()

	/**
	 * Array of ValidationFailed objects.
	 * @var        array ValidationFailed[]
	 */
	protected $validationFailures = array();

	/**
	 * Gets any ValidationFailed objects that resulted from last call to validate().
	 *
	 *
	 * @return     array ValidationFailed[]
	 * @see        validate()
	 */
	public function getValidationFailures()
	{
		return $this->validationFailures;
	}

	/**
	 * Validates the objects modified field values and all objects related to this table.
	 *
	 * If $columns is either a column name or an array of column names
	 * only those columns are validated.
	 *
	 * @param      mixed $columns Column name or an array of column names.
	 * @return     boolean Whether all columns pass validation.
	 * @see        doValidate()
	 * @see        getValidationFailures()
	 */
	public function validate($columns = null)
	{
		$res = $this->doValidate($columns);
		if ($res === true) {
			$this->validationFailures = array();
			return true;
		} else {
			$this->validationFailures = $res;
			return false;
		}
	}

	/**
	 * This function performs the validation work for complex object models.
	 *
	 * In addition to checking the current object, all related objects will
	 * also be validated.  If all pass then <code>true</code> is returned; otherwise
	 * an aggreagated array of ValidationFailed objects will be returned.
	 *
	 * @param      array $columns Array of column names to validate.
	 * @return     mixed <code>true</code> if all validations pass; array of <code>ValidationFailed</code> objets otherwise.
	 */
	protected function doValidate($columns = null)
	{
		if (!$this->alreadyInValidation) {
			$this->alreadyInValidation = true;
			$retval = null;

			$failureMap = array();


			if (($retval = C060InventarioPeer::doValidate($this, $columns)) !== true) {
				$failureMap = array_merge($failureMap, $retval);
			}



			$this->alreadyInValidation = false;
		}

		return (!empty($failureMap) ? $failureMap : true);
	}

	/**
	 * Retrieves a field from the object by name passed in as a string.
	 *
	 * @param      string $name name
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     mixed Value of field.
	 */
	public function getByName($name, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = C060InventarioPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		$field = $this->getByPosition($pos);
		return $field;
	}

	/**
	 * Retrieves a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @return     mixed Value of field at $pos
	 */
	public function getByPosition($pos)
	{
		switch($pos) {
			case 0:
				return $this->getCoEquipo();
				break;
			case 1:
				return $this->getCoRegion();
				break;
			case 2:
				return $this->getCoNegocio();
				break;
			case 3:
				return $this->getCoDivision();
				break;
			case 4:
				return $this->getCoTipo();
				break;
			case 5:
				return $this->getCoCustodio();
				break;
			case 6:
				return $this->getTxEtiquetaSti();
				break;
			case 7:
				return $this->getCoEstado();
				break;
			case 8:
				return $this->getTxNombreEquipo();
				break;
			case 9:
				return $this->getTxFunsionEquipo();
				break;
			case 10:
				return $this->getCoSo();
				break;
			case 11:
				return $this->getTxEtiquetaActivo();
				break;
			case 12:
				return $this->getTxSerialHardware();
				break;
			case 13:
				return $this->getTxMarcaHardware();
				break;
			case 14:
				return $this->getTxModeloHardware();
				break;
			case 15:
				return $this->getCoCiudad();
				break;
			case 16:
				return $this->getCoEdificio();
				break;
			case 17:
				return $this->getTxDireccionUbicacion();
				break;
			case 18:
				return $this->getTxDetalleUbicacion();
				break;
			case 19:
				return $this->getCoCentroDato();
				break;
			case 20:
				return $this->getCoRack();
				break;
			case 21:
				return $this->getTxUbicacionLlave();
				break;
			case 22:
				return $this->getInRespaldoAutomatizado();
				break;
			case 23:
				return $this->getInBloqueoInactividad();
				break;
			case 24:
				return $this->getInAdiministradoresPersonalizados();
				break;
			case 25:
				return $this->getInPoliticaPassword();
				break;
			case 26:
				return $this->getInSincronizacionReloj();
				break;
			case 27:
				return $this->getInMonitoreado();
				break;
			case 28:
				return $this->getInInfActualizada();
				break;
			case 29:
				return $this->getInLogActivo();
				break;
			case 30:
				return $this->getCoNivelCriticidad();
				break;
			case 31:
				return $this->getTxObservaciones();
				break;
			case 32:
				return $this->getTxRutaRespaldoConfiguraciones();
				break;
			case 33:
				return $this->getCoNumInventario();
				break;
			default:
				return null;
				break;
		} // switch()
	}

	/**
	 * Exports the object as an array.
	 *
	 * You can specify the key type of the array by passing one of the class
	 * type constants.
	 *
	 * @param      string $keyType (optional) One of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                        BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM. Defaults to BasePeer::TYPE_PHPNAME.
	 * @param      boolean $includeLazyLoadColumns (optional) Whether to include lazy loaded columns.  Defaults to TRUE.
	 * @return     an associative array containing the field names (as keys) and field values
	 */
	public function toArray($keyType = BasePeer::TYPE_PHPNAME, $includeLazyLoadColumns = true)
	{
		$keys = C060InventarioPeer::getFieldNames($keyType);
		$result = array(
			$keys[0] => $this->getCoEquipo(),
			$keys[1] => $this->getCoRegion(),
			$keys[2] => $this->getCoNegocio(),
			$keys[3] => $this->getCoDivision(),
			$keys[4] => $this->getCoTipo(),
			$keys[5] => $this->getCoCustodio(),
			$keys[6] => $this->getTxEtiquetaSti(),
			$keys[7] => $this->getCoEstado(),
			$keys[8] => $this->getTxNombreEquipo(),
			$keys[9] => $this->getTxFunsionEquipo(),
			$keys[10] => $this->getCoSo(),
			$keys[11] => $this->getTxEtiquetaActivo(),
			$keys[12] => $this->getTxSerialHardware(),
			$keys[13] => $this->getTxMarcaHardware(),
			$keys[14] => $this->getTxModeloHardware(),
			$keys[15] => $this->getCoCiudad(),
			$keys[16] => $this->getCoEdificio(),
			$keys[17] => $this->getTxDireccionUbicacion(),
			$keys[18] => $this->getTxDetalleUbicacion(),
			$keys[19] => $this->getCoCentroDato(),
			$keys[20] => $this->getCoRack(),
			$keys[21] => $this->getTxUbicacionLlave(),
			$keys[22] => $this->getInRespaldoAutomatizado(),
			$keys[23] => $this->getInBloqueoInactividad(),
			$keys[24] => $this->getInAdiministradoresPersonalizados(),
			$keys[25] => $this->getInPoliticaPassword(),
			$keys[26] => $this->getInSincronizacionReloj(),
			$keys[27] => $this->getInMonitoreado(),
			$keys[28] => $this->getInInfActualizada(),
			$keys[29] => $this->getInLogActivo(),
			$keys[30] => $this->getCoNivelCriticidad(),
			$keys[31] => $this->getTxObservaciones(),
			$keys[32] => $this->getTxRutaRespaldoConfiguraciones(),
			$keys[33] => $this->getCoNumInventario(),
		);
		return $result;
	}

	/**
	 * Sets a field from the object by name passed in as a string.
	 *
	 * @param      string $name peer name
	 * @param      mixed $value field value
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     void
	 */
	public function setByName($name, $value, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = C060InventarioPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		return $this->setByPosition($pos, $value);
	}

	/**
	 * Sets a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @param      mixed $value field value
	 * @return     void
	 */
	public function setByPosition($pos, $value)
	{
		switch($pos) {
			case 0:
				$this->setCoEquipo($value);
				break;
			case 1:
				$this->setCoRegion($value);
				break;
			case 2:
				$this->setCoNegocio($value);
				break;
			case 3:
				$this->setCoDivision($value);
				break;
			case 4:
				$this->setCoTipo($value);
				break;
			case 5:
				$this->setCoCustodio($value);
				break;
			case 6:
				$this->setTxEtiquetaSti($value);
				break;
			case 7:
				$this->setCoEstado($value);
				break;
			case 8:
				$this->setTxNombreEquipo($value);
				break;
			case 9:
				$this->setTxFunsionEquipo($value);
				break;
			case 10:
				$this->setCoSo($value);
				break;
			case 11:
				$this->setTxEtiquetaActivo($value);
				break;
			case 12:
				$this->setTxSerialHardware($value);
				break;
			case 13:
				$this->setTxMarcaHardware($value);
				break;
			case 14:
				$this->setTxModeloHardware($value);
				break;
			case 15:
				$this->setCoCiudad($value);
				break;
			case 16:
				$this->setCoEdificio($value);
				break;
			case 17:
				$this->setTxDireccionUbicacion($value);
				break;
			case 18:
				$this->setTxDetalleUbicacion($value);
				break;
			case 19:
				$this->setCoCentroDato($value);
				break;
			case 20:
				$this->setCoRack($value);
				break;
			case 21:
				$this->setTxUbicacionLlave($value);
				break;
			case 22:
				$this->setInRespaldoAutomatizado($value);
				break;
			case 23:
				$this->setInBloqueoInactividad($value);
				break;
			case 24:
				$this->setInAdiministradoresPersonalizados($value);
				break;
			case 25:
				$this->setInPoliticaPassword($value);
				break;
			case 26:
				$this->setInSincronizacionReloj($value);
				break;
			case 27:
				$this->setInMonitoreado($value);
				break;
			case 28:
				$this->setInInfActualizada($value);
				break;
			case 29:
				$this->setInLogActivo($value);
				break;
			case 30:
				$this->setCoNivelCriticidad($value);
				break;
			case 31:
				$this->setTxObservaciones($value);
				break;
			case 32:
				$this->setTxRutaRespaldoConfiguraciones($value);
				break;
			case 33:
				$this->setCoNumInventario($value);
				break;
		} // switch()
	}

	/**
	 * Populates the object using an array.
	 *
	 * This is particularly useful when populating an object from one of the
	 * request arrays (e.g. $_POST).  This method goes through the column
	 * names, checking to see whether a matching key exists in populated
	 * array. If so the setByName() method is called for that column.
	 *
	 * You can specify the key type of the array by additionally passing one
	 * of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME,
	 * BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM.
	 * The default key type is the column's phpname (e.g. 'AuthorId')
	 *
	 * @param      array  $arr     An array to populate the object from.
	 * @param      string $keyType The type of keys the array uses.
	 * @return     void
	 */
	public function fromArray($arr, $keyType = BasePeer::TYPE_PHPNAME)
	{
		$keys = C060InventarioPeer::getFieldNames($keyType);

		if (array_key_exists($keys[0], $arr)) $this->setCoEquipo($arr[$keys[0]]);
		if (array_key_exists($keys[1], $arr)) $this->setCoRegion($arr[$keys[1]]);
		if (array_key_exists($keys[2], $arr)) $this->setCoNegocio($arr[$keys[2]]);
		if (array_key_exists($keys[3], $arr)) $this->setCoDivision($arr[$keys[3]]);
		if (array_key_exists($keys[4], $arr)) $this->setCoTipo($arr[$keys[4]]);
		if (array_key_exists($keys[5], $arr)) $this->setCoCustodio($arr[$keys[5]]);
		if (array_key_exists($keys[6], $arr)) $this->setTxEtiquetaSti($arr[$keys[6]]);
		if (array_key_exists($keys[7], $arr)) $this->setCoEstado($arr[$keys[7]]);
		if (array_key_exists($keys[8], $arr)) $this->setTxNombreEquipo($arr[$keys[8]]);
		if (array_key_exists($keys[9], $arr)) $this->setTxFunsionEquipo($arr[$keys[9]]);
		if (array_key_exists($keys[10], $arr)) $this->setCoSo($arr[$keys[10]]);
		if (array_key_exists($keys[11], $arr)) $this->setTxEtiquetaActivo($arr[$keys[11]]);
		if (array_key_exists($keys[12], $arr)) $this->setTxSerialHardware($arr[$keys[12]]);
		if (array_key_exists($keys[13], $arr)) $this->setTxMarcaHardware($arr[$keys[13]]);
		if (array_key_exists($keys[14], $arr)) $this->setTxModeloHardware($arr[$keys[14]]);
		if (array_key_exists($keys[15], $arr)) $this->setCoCiudad($arr[$keys[15]]);
		if (array_key_exists($keys[16], $arr)) $this->setCoEdificio($arr[$keys[16]]);
		if (array_key_exists($keys[17], $arr)) $this->setTxDireccionUbicacion($arr[$keys[17]]);
		if (array_key_exists($keys[18], $arr)) $this->setTxDetalleUbicacion($arr[$keys[18]]);
		if (array_key_exists($keys[19], $arr)) $this->setCoCentroDato($arr[$keys[19]]);
		if (array_key_exists($keys[20], $arr)) $this->setCoRack($arr[$keys[20]]);
		if (array_key_exists($keys[21], $arr)) $this->setTxUbicacionLlave($arr[$keys[21]]);
		if (array_key_exists($keys[22], $arr)) $this->setInRespaldoAutomatizado($arr[$keys[22]]);
		if (array_key_exists($keys[23], $arr)) $this->setInBloqueoInactividad($arr[$keys[23]]);
		if (array_key_exists($keys[24], $arr)) $this->setInAdiministradoresPersonalizados($arr[$keys[24]]);
		if (array_key_exists($keys[25], $arr)) $this->setInPoliticaPassword($arr[$keys[25]]);
		if (array_key_exists($keys[26], $arr)) $this->setInSincronizacionReloj($arr[$keys[26]]);
		if (array_key_exists($keys[27], $arr)) $this->setInMonitoreado($arr[$keys[27]]);
		if (array_key_exists($keys[28], $arr)) $this->setInInfActualizada($arr[$keys[28]]);
		if (array_key_exists($keys[29], $arr)) $this->setInLogActivo($arr[$keys[29]]);
		if (array_key_exists($keys[30], $arr)) $this->setCoNivelCriticidad($arr[$keys[30]]);
		if (array_key_exists($keys[31], $arr)) $this->setTxObservaciones($arr[$keys[31]]);
		if (array_key_exists($keys[32], $arr)) $this->setTxRutaRespaldoConfiguraciones($arr[$keys[32]]);
		if (array_key_exists($keys[33], $arr)) $this->setCoNumInventario($arr[$keys[33]]);
	}

	/**
	 * Build a Criteria object containing the values of all modified columns in this object.
	 *
	 * @return     Criteria The Criteria object containing all modified values.
	 */
	public function buildCriteria()
	{
		$criteria = new Criteria(C060InventarioPeer::DATABASE_NAME);

		if ($this->isColumnModified(C060InventarioPeer::CO_EQUIPO)) $criteria->add(C060InventarioPeer::CO_EQUIPO, $this->co_equipo);
		if ($this->isColumnModified(C060InventarioPeer::CO_REGION)) $criteria->add(C060InventarioPeer::CO_REGION, $this->co_region);
		if ($this->isColumnModified(C060InventarioPeer::CO_NEGOCIO)) $criteria->add(C060InventarioPeer::CO_NEGOCIO, $this->co_negocio);
		if ($this->isColumnModified(C060InventarioPeer::CO_DIVISION)) $criteria->add(C060InventarioPeer::CO_DIVISION, $this->co_division);
		if ($this->isColumnModified(C060InventarioPeer::CO_TIPO)) $criteria->add(C060InventarioPeer::CO_TIPO, $this->co_tipo);
		if ($this->isColumnModified(C060InventarioPeer::CO_CUSTODIO)) $criteria->add(C060InventarioPeer::CO_CUSTODIO, $this->co_custodio);
		if ($this->isColumnModified(C060InventarioPeer::TX_ETIQUETA_STI)) $criteria->add(C060InventarioPeer::TX_ETIQUETA_STI, $this->tx_etiqueta_sti);
		if ($this->isColumnModified(C060InventarioPeer::CO_ESTADO)) $criteria->add(C060InventarioPeer::CO_ESTADO, $this->co_estado);
		if ($this->isColumnModified(C060InventarioPeer::TX_NOMBRE_EQUIPO)) $criteria->add(C060InventarioPeer::TX_NOMBRE_EQUIPO, $this->tx_nombre_equipo);
		if ($this->isColumnModified(C060InventarioPeer::TX_FUNSION_EQUIPO)) $criteria->add(C060InventarioPeer::TX_FUNSION_EQUIPO, $this->tx_funsion_equipo);
		if ($this->isColumnModified(C060InventarioPeer::CO_SO)) $criteria->add(C060InventarioPeer::CO_SO, $this->co_so);
		if ($this->isColumnModified(C060InventarioPeer::TX_ETIQUETA_ACTIVO)) $criteria->add(C060InventarioPeer::TX_ETIQUETA_ACTIVO, $this->tx_etiqueta_activo);
		if ($this->isColumnModified(C060InventarioPeer::TX_SERIAL_HARDWARE)) $criteria->add(C060InventarioPeer::TX_SERIAL_HARDWARE, $this->tx_serial_hardware);
		if ($this->isColumnModified(C060InventarioPeer::TX_MARCA_HARDWARE)) $criteria->add(C060InventarioPeer::TX_MARCA_HARDWARE, $this->tx_marca_hardware);
		if ($this->isColumnModified(C060InventarioPeer::TX_MODELO_HARDWARE)) $criteria->add(C060InventarioPeer::TX_MODELO_HARDWARE, $this->tx_modelo_hardware);
		if ($this->isColumnModified(C060InventarioPeer::CO_CIUDAD)) $criteria->add(C060InventarioPeer::CO_CIUDAD, $this->co_ciudad);
		if ($this->isColumnModified(C060InventarioPeer::CO_EDIFICIO)) $criteria->add(C060InventarioPeer::CO_EDIFICIO, $this->co_edificio);
		if ($this->isColumnModified(C060InventarioPeer::TX_DIRECCION_UBICACION)) $criteria->add(C060InventarioPeer::TX_DIRECCION_UBICACION, $this->tx_direccion_ubicacion);
		if ($this->isColumnModified(C060InventarioPeer::TX_DETALLE_UBICACION)) $criteria->add(C060InventarioPeer::TX_DETALLE_UBICACION, $this->tx_detalle_ubicacion);
		if ($this->isColumnModified(C060InventarioPeer::CO_CENTRO_DATO)) $criteria->add(C060InventarioPeer::CO_CENTRO_DATO, $this->co_centro_dato);
		if ($this->isColumnModified(C060InventarioPeer::CO_RACK)) $criteria->add(C060InventarioPeer::CO_RACK, $this->co_rack);
		if ($this->isColumnModified(C060InventarioPeer::TX_UBICACION_LLAVE)) $criteria->add(C060InventarioPeer::TX_UBICACION_LLAVE, $this->tx_ubicacion_llave);
		if ($this->isColumnModified(C060InventarioPeer::IN_RESPALDO_AUTOMATIZADO)) $criteria->add(C060InventarioPeer::IN_RESPALDO_AUTOMATIZADO, $this->in_respaldo_automatizado);
		if ($this->isColumnModified(C060InventarioPeer::IN_BLOQUEO_INACTIVIDAD)) $criteria->add(C060InventarioPeer::IN_BLOQUEO_INACTIVIDAD, $this->in_bloqueo_inactividad);
		if ($this->isColumnModified(C060InventarioPeer::IN_ADIMINISTRADORES_PERSONALIZADOS)) $criteria->add(C060InventarioPeer::IN_ADIMINISTRADORES_PERSONALIZADOS, $this->in_adiministradores_personalizados);
		if ($this->isColumnModified(C060InventarioPeer::IN_POLITICA_PASSWORD)) $criteria->add(C060InventarioPeer::IN_POLITICA_PASSWORD, $this->in_politica_password);
		if ($this->isColumnModified(C060InventarioPeer::IN_SINCRONIZACION_RELOJ)) $criteria->add(C060InventarioPeer::IN_SINCRONIZACION_RELOJ, $this->in_sincronizacion_reloj);
		if ($this->isColumnModified(C060InventarioPeer::IN_MONITOREADO)) $criteria->add(C060InventarioPeer::IN_MONITOREADO, $this->in_monitoreado);
		if ($this->isColumnModified(C060InventarioPeer::IN_INF_ACTUALIZADA)) $criteria->add(C060InventarioPeer::IN_INF_ACTUALIZADA, $this->in_inf_actualizada);
		if ($this->isColumnModified(C060InventarioPeer::IN_LOG_ACTIVO)) $criteria->add(C060InventarioPeer::IN_LOG_ACTIVO, $this->in_log_activo);
		if ($this->isColumnModified(C060InventarioPeer::CO_NIVEL_CRITICIDAD)) $criteria->add(C060InventarioPeer::CO_NIVEL_CRITICIDAD, $this->co_nivel_criticidad);
		if ($this->isColumnModified(C060InventarioPeer::TX_OBSERVACIONES)) $criteria->add(C060InventarioPeer::TX_OBSERVACIONES, $this->tx_observaciones);
		if ($this->isColumnModified(C060InventarioPeer::TX_RUTA_RESPALDO_CONFIGURACIONES)) $criteria->add(C060InventarioPeer::TX_RUTA_RESPALDO_CONFIGURACIONES, $this->tx_ruta_respaldo_configuraciones);
		if ($this->isColumnModified(C060InventarioPeer::CO_NUM_INVENTARIO)) $criteria->add(C060InventarioPeer::CO_NUM_INVENTARIO, $this->co_num_inventario);

		return $criteria;
	}

	/**
	 * Builds a Criteria object containing the primary key for this object.
	 *
	 * Unlike buildCriteria() this method includes the primary key values regardless
	 * of whether or not they have been modified.
	 *
	 * @return     Criteria The Criteria object containing value(s) for primary key(s).
	 */
	public function buildPkeyCriteria()
	{
		$criteria = new Criteria(C060InventarioPeer::DATABASE_NAME);

		$criteria->add(C060InventarioPeer::CO_NUM_INVENTARIO, $this->co_num_inventario);

		return $criteria;
	}

	/**
	 * Returns the primary key for this object (row).
	 * @return     string
	 */
	public function getPrimaryKey()
	{
		return $this->getCoNumInventario();
	}

	/**
	 * Generic method to set the primary key (co_num_inventario column).
	 *
	 * @param      string $key Primary key.
	 * @return     void
	 */
	public function setPrimaryKey($key)
	{
		$this->setCoNumInventario($key);
	}

	/**
	 * Sets contents of passed object to values from current object.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      object $copyObj An object of C060Inventario (or compatible) type.
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @throws     PropelException
	 */
	public function copyInto($copyObj, $deepCopy = false)
	{

		$copyObj->setTxEtiquetaSti($this->tx_etiqueta_sti);

		$copyObj->setTxNombreEquipo($this->tx_nombre_equipo);

		$copyObj->setTxFunsionEquipo($this->tx_funsion_equipo);

		$copyObj->setTxEtiquetaActivo($this->tx_etiqueta_activo);

		$copyObj->setTxSerialHardware($this->tx_serial_hardware);

		$copyObj->setTxMarcaHardware($this->tx_marca_hardware);

		$copyObj->setTxModeloHardware($this->tx_modelo_hardware);

		$copyObj->setTxDireccionUbicacion($this->tx_direccion_ubicacion);

		$copyObj->setTxDetalleUbicacion($this->tx_detalle_ubicacion);

		$copyObj->setTxUbicacionLlave($this->tx_ubicacion_llave);

		$copyObj->setInRespaldoAutomatizado($this->in_respaldo_automatizado);

		$copyObj->setInBloqueoInactividad($this->in_bloqueo_inactividad);

		$copyObj->setInAdiministradoresPersonalizados($this->in_adiministradores_personalizados);

		$copyObj->setInPoliticaPassword($this->in_politica_password);

		$copyObj->setInSincronizacionReloj($this->in_sincronizacion_reloj);

		$copyObj->setInMonitoreado($this->in_monitoreado);

		$copyObj->setInInfActualizada($this->in_inf_actualizada);

		$copyObj->setInLogActivo($this->in_log_activo);

		$copyObj->setTxObservaciones($this->tx_observaciones);

		$copyObj->setTxRutaRespaldoConfiguraciones($this->tx_ruta_respaldo_configuraciones);


		$copyObj->setNew(true);

		$copyObj->setCoEquipo(NULL); // this is a auto-increment column, so set to default value

		$copyObj->setCoRegion(NULL); // this is a auto-increment column, so set to default value

		$copyObj->setCoNegocio(NULL); // this is a auto-increment column, so set to default value

		$copyObj->setCoDivision(NULL); // this is a auto-increment column, so set to default value

		$copyObj->setCoTipo(NULL); // this is a auto-increment column, so set to default value

		$copyObj->setCoCustodio(NULL); // this is a auto-increment column, so set to default value

		$copyObj->setCoEstado(NULL); // this is a auto-increment column, so set to default value

		$copyObj->setCoSo(NULL); // this is a auto-increment column, so set to default value

		$copyObj->setCoCiudad(NULL); // this is a auto-increment column, so set to default value

		$copyObj->setCoEdificio(NULL); // this is a auto-increment column, so set to default value

		$copyObj->setCoCentroDato(NULL); // this is a auto-increment column, so set to default value

		$copyObj->setCoRack(NULL); // this is a auto-increment column, so set to default value

		$copyObj->setCoNivelCriticidad(NULL); // this is a auto-increment column, so set to default value

		$copyObj->setCoNumInventario(NULL); // this is a auto-increment column, so set to default value

	}

	/**
	 * Makes a copy of this object that will be inserted as a new row in table when saved.
	 * It creates a new object filling in the simple attributes, but skipping any primary
	 * keys that are defined for the table.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @return     C060Inventario Clone of current object.
	 * @throws     PropelException
	 */
	public function copy($deepCopy = false)
	{
		// we use get_class(), because this might be a subclass
		$clazz = get_class($this);
		$copyObj = new $clazz();
		$this->copyInto($copyObj, $deepCopy);
		return $copyObj;
	}

	/**
	 * Returns a peer instance associated with this om.
	 *
	 * Since Peer classes are not to have any instance attributes, this method returns the
	 * same instance for all member of this class. The method could therefore
	 * be static, but this would prevent one from overriding the behavior.
	 *
	 * @return     C060InventarioPeer
	 */
	public function getPeer()
	{
		if (self::$peer === null) {
			self::$peer = new C060InventarioPeer();
		}
		return self::$peer;
	}

	/**
	 * Resets all collections of referencing foreign keys.
	 *
	 * This method is a user-space workaround for PHP's inability to garbage collect objects
	 * with circular references.  This is currently necessary when using Propel in certain
	 * daemon or large-volumne/high-memory operations.
	 *
	 * @param      boolean $deep Whether to also clear the references on all associated objects.
	 */
	public function clearAllReferences($deep = false)
	{
		if ($deep) {
		} // if ($deep)

	}


  public function __call($method, $arguments)
  {
    if (!$callable = sfMixer::getCallable('BaseC060Inventario:'.$method))
    {
      throw new sfException(sprintf('Call to undefined method BaseC060Inventario::%s', $method));
    }

    array_unshift($arguments, $this);

    return call_user_func_array($callable, $arguments);
  }


} // BaseC060Inventario
