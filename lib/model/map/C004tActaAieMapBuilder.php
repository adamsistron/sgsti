<?php


/**
 * This class adds structure of 'c004t_acta_aie' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Sat Nov 14 07:33:31 2015
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class C004tActaAieMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.C004tActaAieMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(C004tActaAiePeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(C004tActaAiePeer::TABLE_NAME);
		$tMap->setPhpName('C004tActaAie');
		$tMap->setClassname('C004tActaAie');

		$tMap->setUseIdGenerator(true);

		$tMap->setPrimaryKeyMethodInfo('c004t_acta_aie_co_aie_seq');

		$tMap->addPrimaryKey('CO_AIE', 'CoAie', 'BIGINT', true, null);

		$tMap->addColumn('FE_EMISION', 'FeEmision', 'DATE', true, null);

		$tMap->addForeignKey('CO_FORENSE', 'CoForense', 'BIGINT', 'c001t_forense', 'CO_FORENSE', true, null);

		$tMap->addForeignKey('CO_REGION', 'CoRegion', 'BIGINT', 'j813t_region', 'CO_REGION', true, null);

		$tMap->addForeignKey('CO_NEGOCIO', 'CoNegocio', 'BIGINT', 'j814t_negocio', 'CO_NEGOCIO', true, null);

		$tMap->addForeignKey('CO_DIVISION', 'CoDivision', 'BIGINT', 'j815t_division', 'CO_DIVISION', true, null);

		$tMap->addColumn('TX_SERIAL', 'TxSerial', 'VARCHAR', false, 255);

		$tMap->addColumn('TX_OBSERVACIONES', 'TxObservaciones', 'VARCHAR', false, 255);

		$tMap->addColumn('TX_RUTA', 'TxRuta', 'VARCHAR', false, 255);

		$tMap->addColumn('NB_ARCHIVO', 'NbArchivo', 'VARCHAR', false, 255);

		$tMap->addColumn('IN_ABIERTA', 'InAbierta', 'BOOLEAN', false, null);

		$tMap->addForeignKey('CO_CLASIFICACION', 'CoClasificacion', 'BIGINT', 'j802t_clasificacion', 'CO_CLASIFICACION', true, null);

		$tMap->addForeignKey('CO_TRANSACCION', 'CoTransaccion', 'BIGINT', 'c801t_transaccion', 'CO_TRANSACCION', true, null);

		$tMap->addColumn('CREATED_AT', 'CreatedAt', 'TIMESTAMP', false, null);

		$tMap->addColumn('UPDATED_AT', 'UpdatedAt', 'TIME', false, null);

		$tMap->addForeignKey('CO_ELABORA', 'CoElabora', 'BIGINT', 'j811t_usuario', 'CO_USUARIO', true, null);

		$tMap->addForeignKey('CO_CUSTODIO', 'CoCustodio', 'BIGINT', 'j812_persona', 'CO_PERSONA', true, null);

		$tMap->addForeignKey('CO_RECURSO', 'CoRecurso', 'BIGINT', 'j805t_tipo_recurso', 'CO_TIPO_RECURSO', true, null);

		$tMap->addForeignKey('CO_CIUDAD_ACTA', 'CoCiudadActa', 'BIGINT', 'j806t_ciudad', 'CO_CIUDAD', true, null);

	} // doBuild()

} // C004tActaAieMapBuilder
