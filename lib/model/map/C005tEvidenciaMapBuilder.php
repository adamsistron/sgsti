<?php


/**
 * This class adds structure of 'c005t_evidencia' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Thu Oct  1 13:19:45 2015
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class C005tEvidenciaMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.C005tEvidenciaMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(C005tEvidenciaPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(C005tEvidenciaPeer::TABLE_NAME);
		$tMap->setPhpName('C005tEvidencia');
		$tMap->setClassname('C005tEvidencia');

		$tMap->setUseIdGenerator(true);

		$tMap->setPrimaryKeyMethodInfo('c005t_evidencia_co_evidencia_seq');

		$tMap->addColumn('CO_EVIDENCIA', 'CoEvidencia', 'BIGINT', true, null);

		$tMap->addColumn('FE_REGISTRO', 'FeRegistro', 'DATE', false, null);

		$tMap->addColumn('CO_REGISTRO', 'CoRegistro', 'BIGINT', false, null);

		$tMap->addColumn('CO_ACC', 'CoAcc', 'BIGINT', false, null);

		$tMap->addColumn('CO_AIE', 'CoAie', 'BIGINT', false, null);

		$tMap->addColumn('TX_DESCRIPCION_COLECCION', 'TxDescripcionColeccion', 'VARCHAR', false, 255);

		$tMap->addColumn('FE_COLECCION_EVIDENCIA', 'FeColeccionEvidencia', 'DATE', false, null);

		$tMap->addColumn('CO_COLECTA', 'CoColecta', 'BIGINT', false, null);

		$tMap->addColumn('CO_RECURSO', 'CoRecurso', 'BIGINT', false, null);

		$tMap->addColumn('TX_NOMBRE_RECURSO', 'TxNombreRecurso', 'VARCHAR', false, 255);

		$tMap->addColumn('TX_SERIAL_RECURSO', 'TxSerialRecurso', 'VARCHAR', false, 255);

		$tMap->addColumn('TX_MARCA_RECURSO', 'TxMarcaRecurso', 'VARCHAR', false, 255);

		$tMap->addColumn('TX_MODELO_RECURSO', 'TxModeloRecurso', 'VARCHAR', false, 255);

		$tMap->addColumn('TX_NUMERO_ACTIVO', 'TxNumeroActivo', 'VARCHAR', false, 255);

		$tMap->addColumn('CO_TIPO_EVIDENCIA', 'CoTipoEvidencia', 'BIGINT', false, null);

		$tMap->addColumn('CO_ESTADO_EVIDENCIA', 'CoEstadoEvidencia', 'BIGINT', false, null);

		$tMap->addColumn('CO_LUGAR_SEGURO', 'CoLugarSeguro', 'BIGINT', false, null);

		$tMap->addColumn('CO_REPOSITORIO', 'CoRepositorio', 'BIGINT', false, null);

		$tMap->addColumn('CO_CUSTODIO_STI', 'CoCustodioSti', 'BIGINT', false, null);

		$tMap->addColumn('TX_OBSERVACIONES', 'TxObservaciones', 'VARCHAR', false, 255);

		$tMap->addColumn('TX_CLASIFICACION', 'TxClasificacion', 'VARCHAR', false, 255);

		$tMap->addPrimaryKey('ID', 'Id', 'INTEGER', true, null);

	} // doBuild()

} // C005tEvidenciaMapBuilder
